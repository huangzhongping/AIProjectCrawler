name: Daily AI Trends Update

on:
  schedule:
    # 每天UTC时间2:00执行（北京时间10:00）
    - cron: '0 2 * * *'
    # 每天UTC时间10:00执行（北京时间18:00）
    - cron: '0 10 * * *'
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'config/**'
      - '.github/workflows/**'

jobs:
  update-trends:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 尝试安装主要依赖，如果失败则使用最小依赖
        pip install -r requirements.txt || pip install -r requirements-minimal.txt
        # 确保核心依赖可用
        pip install requests beautifulsoup4 lxml pyyaml loguru aiohttp
    
    - name: Create config file
      run: |
        cp config/settings.yaml.example config/settings.yaml
        # 使用GitHub Secrets中的API密钥
        sed -i 's/your-openai-api-key-here/${{ secrets.OPENAI_API_KEY }}/g' config/settings.yaml
    
    - name: Create necessary directories
      run: |
        mkdir -p data/{raw,processed,archive}
        mkdir -p output/{reports,charts,web}
        mkdir -p logs
    
    - name: Run daily update
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LOG_LEVEL: INFO
      run: |
        # 尝试运行完整版本，如果失败则使用简化版本
        python run_keywords_only.py || python run_github_actions.py
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 添加生成的文件
        git add data/processed/
        git add output/
        
        # 检查是否有变更
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto update: $(date +'%Y-%m-%d %H:%M:%S')"
          git push
        fi
    
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v3
    
    - name: Prepare Pages content
      if: github.ref == 'refs/heads/main'
      run: |
        # 创建 Pages 目录
        mkdir -p pages

        # 复制主页文件
        cp docs/index.html pages/
        if [ -f "docs/_config.yml" ]; then
          cp docs/_config.yml pages/
        fi

        # 复制报告文件（如果存在）
        if [ -d "output/reports" ]; then
          mkdir -p pages/reports
          cp -r output/reports/* pages/reports/ 2>/dev/null || true
        fi

        # 复制历史记录页面（如果存在）
        if [ -f "output/history.html" ]; then
          cp output/history.html pages/
        fi

        # 复制其他输出文件
        if [ -d "output" ]; then
          find output -name "*.html" -exec cp {} pages/ \; 2>/dev/null || true
          find output -name "*.json" -exec cp {} pages/ \; 2>/dev/null || true
        fi

        # 确保至少有一个index.html
        if [ ! -f "pages/index.html" ]; then
          echo "<!DOCTYPE html><html><head><title>AI项目雷达</title></head><body><h1>AI项目雷达</h1><p>页面正在构建中...</p></body></html>" > pages/index.html
        fi

    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v2
      with:
        path: pages
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v2

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: update-trends
    if: failure()
    
    steps:
    - name: Send notification on failure
      run: |
        echo "Daily update failed. Please check the logs."
        # 这里可以添加其他通知方式，如发送邮件、Slack消息等
